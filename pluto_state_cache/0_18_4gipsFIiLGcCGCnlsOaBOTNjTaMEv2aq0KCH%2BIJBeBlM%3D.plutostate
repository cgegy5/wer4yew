è•bondsÄ¨cell_resultsÜŸ$06a1d5cc-6bda-11eb-202a-7f59977d1b27â¶queued¬§logsêßrunning¬¶outputÜ§body⁄;<bond def="wow" unique_id="SrP&#43;RFAJo/&#43;P"><span class="pl-image waiting-for-permission">
<style>
	
	.pl-image.popped-out {
		position: fixed;
		top: 0;
		right: 0;
		z-index: 5;
	}

	.pl-image #video-container {
		width: 250px;
	}

	.pl-image video {
		border-radius: 1rem 1rem 0 0;
	}
	.pl-image.waiting-for-permission #video-container {
		display: none;
	}
	.pl-image #prompt {
		display: none;
	}
	.pl-image.waiting-for-permission #prompt {
		width: 250px;
		height: 200px;
		display: grid;
		place-items: center;
		font-family: monospace;
		font-weight: bold;
		text-decoration: underline;
		cursor: pointer;
		border: 5px dashed rgba(0,0,0,.5);
	}

	.pl-image video {
		display: block;
	}
	.pl-image .bar {
		width: inherit;
		display: flex;
		z-index: 6;
	}
	.pl-image .bar#top {
		position: absolute;
		flex-direction: column;
	}
	
	.pl-image .bar#bottom {
		background: black;
		border-radius: 0 0 1rem 1rem;
	}
	.pl-image .bar button {
		flex: 0 0 auto;
		background: rgba(255,255,255,.8);
		border: none;
		width: 2rem;
		height: 2rem;
		border-radius: 100%;
		cursor: pointer;
		z-index: 7;
	}
	.pl-image .bar button#shutter {
		width: 3rem;
		height: 3rem;
		margin: -1.5rem auto .2rem auto;
	}

	.pl-image video.takepicture {
		animation: pictureflash 200ms linear;
	}

	@keyframes pictureflash {
		0% {
			filter: grayscale(1.0) contrast(2.0);
		}

		100% {
			filter: grayscale(0.0) contrast(1.0);
		}
	}
</style>

	<div id="video-container">
		<div id="top" class="bar">
			<button id="stop" title="Stop video">‚úñ</button>
			<button id="pop-out" title="Pop out/pop in">‚èè</button>
		</div>
		<video playsinline autoplay></video>
		<div id="bottom" class="bar">
		<button id="shutter" title="Click to take a picture">üì∑</button>
		</div>
	</div>
		
	<div id="prompt">
		<span>
		Enable webcam
		</span>
	</div>

<script>
	// based on https://github.com/fonsp/printi-static (by the same author)

	const span = currentScript.parentElement
	const video = span.querySelector("video")
	const popout = span.querySelector("button#pop-out")
	const stop = span.querySelector("button#stop")
	const shutter = span.querySelector("button#shutter")
	const prompt = span.querySelector(".pl-image #prompt")

	const maxsize = 150

	const send_source = (source, src_width, src_height) => {
		const scale = Math.min(1.0, maxsize / src_width, maxsize / src_height)

		const width = Math.floor(src_width * scale)
		const height = Math.floor(src_height * scale)

		const canvas = html`<canvas width=${width} height=${height}>`
		const ctx = canvas.getContext("2d")
		ctx.drawImage(source, 0, 0, width, height)

		span.value = {
			width: width,
			height: height,
			data: ctx.getImageData(0, 0, width, height).data,
		}
		span.dispatchEvent(new CustomEvent("input"))
	}
	
	const clear_camera = () => {
		window.stream.getTracks().forEach(s => s.stop());
		video.srcObject = null;

		span.classList.add("waiting-for-permission");
	}

	prompt.onclick = () => {
		navigator.mediaDevices.getUserMedia({
			audio: false,
			video: {
				facingMode: "environment",
			},
		}).then(function(stream) {

			stream.onend = console.log

			window.stream = stream
			video.srcObject = stream
			window.cameraConnected = true
			video.controls = false
			video.play()
			video.controls = false

			span.classList.remove("waiting-for-permission");

		}).catch(function(error) {
			console.log(error)
		});
	}
	stop.onclick = () => {
		clear_camera()
	}
	popout.onclick = () => {
		span.classList.toggle("popped-out")
	}

	shutter.onclick = () => {
		const cl = video.classList
		cl.remove("takepicture")
		void video.offsetHeight
		cl.add("takepicture")
		video.play()
		video.controls = false
		console.log(video)
		send_source(video, video.videoWidth, video.videoHeight)
	}
	
	
	document.addEventListener("visibilitychange", () => {
		if (document.visibilityState != "visible") {
			clear_camera()
		}
	})


	// Set a default image

	const img = html`<img crossOrigin="anonymous">`

	img.onload = () => {
	console.log("helloo")
		send_source(img, img.width, img.height)
	}
	img.src = "https://i.imgur.com/SUmi94P.png"
	console.log(img)
</script>
</span>
</bond>∞persist_js_state¬§mime©text/html≤last_run_timestampÀAÿê»QµRó∑has_pluto_hook_features¬¨rootassignee¿ßcell_idŸ$06a1d5cc-6bda-11eb-202a-7f59977d1b27πdepends_on_disabled_cells¬ßruntimeŒê¶∏µpublished_object_keysêßerrored¬Ÿ$6476d911-e081-4c90-b925-992b285880e3â¶queued¬§logsëà§lineˇ£msgí⁄°  Activating new project at `/tmp/jl_1UwyZa`
    Updating registry at `~/.julia/registries/General.toml`
   Resolving package versions...
    Updating `/tmp/jl_1UwyZa/Project.toml`
  [82e4d734] + ImageIO v0.6.1
  [916415d5] + Images v0.25.1
    Updating `/tmp/jl_1UwyZa/Manifest.toml`
  [621f4979] + AbstractFFTs v1.1.0
  [79e6a3ab] + Adapt v3.3.3
  [ec485272] + ArnoldiMethod v0.2.0
  [4fba245c] + ArrayInterface v4.0.4
  [13072b0f] + AxisAlgorithms v1.0.1
  [39de3d68] + AxisArrays v0.4.4
  [fa961155] + CEnum v0.4.1
  [49dc2e85] + Calculus v0.5.1
  [aafaddc9] + CatIndices v0.2.2
  [d360d2e6] + ChainRulesCore v1.14.0
  [9e997f8a] + ChangesOfVariables v0.1.2
  [aaaa29a8] + Clustering v0.14.2
  [3da002f7] + ColorTypes v0.11.0
  [c3611d14] + ColorVectorSpace v0.9.8
  [5ae59095] + Colors v0.12.8
  [34da2185] + Compat v3.42.0
  [ed09eef8] + ComputationalResources v0.3.2
  [150eb455] + CoordinateTransformations v0.6.2
  [dc8bdbbb] + CustomUnitRanges v1.0.2
  [9a962f9c] + DataAPI v1.9.0
  [864edb3b] + DataStructures v0.18.11
  [b4f34e82] + Distances v0.10.7
  [ffbed154] + DocStringExtensions v0.8.6
  [fa6b7ba4] + DualNumbers v0.6.8
  [da5c29d0] + EllipsisNotation v1.4.0
  [4f61f5a4] + FFTViews v0.3.2
  [7a1cc6ca] + FFTW v1.4.6
  [5789e2e9] + FileIO v1.13.0
  [53c48c17] + FixedPointNumbers v0.8.4
  [a2bd30eb] + Graphics v1.1.1
  [86223c79] + Graphs v1.6.0
  [615f187c] + IfElse v0.1.1
  [2803e5a7] + ImageAxes v0.6.10
  [c817782e] + ImageBase v0.1.5
  [f332f351] + ImageContrastAdjustment v0.3.10
  [a09fc81d] + ImageCore v0.9.3
  [51556ac3] + ImageDistances v0.2.15
  [6a3955dd] + ImageFiltering v0.7.1
  [82e4d734] + ImageIO v0.6.1
  [6218d12a] + ImageMagick v1.2.1
  [bc367c6b] + ImageMetadata v0.9.8
  [787d08f9] + ImageMorphology v0.3.1
  [2996bd0c] + ImageQualityIndexes v0.3.0
  [80713f31] + ImageSegmentation v1.7.0
  [4e3cecfd] + ImageShow v0.3.3
  [02fcd773] + ImageTransformations v0.9.4
  [916415d5] + Images v0.25.1
  [9b13fd28] + IndirectArrays v1.0.0
  [d25df0c9] + Inflate v0.1.2
  [1d092043] + IntegralArrays v0.1.3
  [a98d9a8b] + Interpolations v0.13.5
  [8197267c] + IntervalSets v0.5.4
  [3587e190] + InverseFunctions v0.1.3
  [92d709cd] + IrrationalConstants v0.1.1
  [c8e1da08] + IterTools v1.4.0
  [033835bb] + JLD2 v0.4.22
  [692b3bcd] + JLLWrappers v1.4.1
  [b835a17e] + JpegTurbo v0.1.1
  [2ab3a3ac] + LogExpFunctions v0.3.10
  [1914dd2f] + MacroTools v0.5.9
  [dbb5928d] + MappedArrays v0.4.1
  [626554b9] + MetaGraphs v0.7.1
  [e1d29d7a] + Missings v1.0.2
  [e94cdb99] + MosaicViews v0.3.3
  [77ba4419] + NaNMath v0.3.7
  [b8a86587] + NearestNeighbors v0.4.10
  [f09324ee] + Netpbm v1.0.2
  [6fe1bfb0] + OffsetArrays v1.10.8
  [52e1d378] + OpenEXR v0.3.2
  [bac558e1] + OrderedCollections v1.4.1
  [f57f5aa1] + PNGFiles v0.3.14
  [5432bcbf] + PaddedViews v0.5.11
  [d96e819e] + Parameters v0.12.3
  [eebad327] + PkgVersion v0.1.1
  [21216c6a] + Preferences v1.2.5
  [92933f4c] + ProgressMeter v1.7.2
  [4b34888f] + QOI v1.0.0
  [94ee1d12] + Quaternions v0.5.3
  [b3c3ace0] + RangeArrays v0.3.2
  [c84ed2f1] + Ratios v0.4.3
  [189a3867] + Reexport v1.2.2
  [dee08c22] + RegionTrees v0.3.2
  [ae029012] + Requires v1.3.0
  [6038ab10] + Rotations v1.3.0
  [699a6c99] + SimpleTraits v0.9.4
  [47aef6b3] + SimpleWeightedGraphs v1.2.1
  [45858cf5] + Sixel v0.1.2
  [a2af1166] + SortingAlgorithms v1.0.1
  [276daf66] + SpecialFunctions v2.1.4
  [cae243ae] + StackViews v0.1.1
  [aedffcd0] + Static v0.5.6
  [90137ffa] + StaticArrays v1.4.3
  [82ae8749] + StatsAPI v1.2.1
  [2913bbd2] + StatsBase v0.33.16
  [62fd8b95] + TensorCore v0.1.1
  [731e570b] + TiffImages v0.5.4
  [06e1c1a7] + TiledIteration v0.3.1
  [3bb67fe8] + TranscodingStreams v0.9.6
  [3a884ed6] + UnPack v1.0.2
  [efce3f68] + WoodburyMatrices v0.5.5
  [f5851436] + FFTW_jll v3.3.10+0
  [61579ee1] + Ghostscript_jll v9.55.0+0
  [c73af94c] + ImageMagick_jll v6.9.12+2
  [905a6f67] + Imath_jll v3.1.2+0
  [1d5cc7b8] + IntelOpenMP_jll v2018.0.3+2
  [aacddb02] + JpegTurbo_jll v2.1.2+0
  [88015f11] + LERC_jll v3.0.0+1
  [89763e89] + Libtiff_jll v4.3.0+1
  [856f044c] + MKL_jll v2022.0.0+0
  [18a262bb] + OpenEXR_jll v3.1.1+0
  [efe28fd5] + OpenSpecFun_jll v0.5.5+0
  [3161d3a3] + Zstd_jll v1.5.2+0
  [b53b4c65] + libpng_jll v1.6.38+0
  [075b6546] + libsixel_jll v1.8.6+1
  [0dad84c5] + ArgTools
  [56f22d72] + Artifacts
  [2a0f44e3] + Base64
  [ade2ca70] + Dates
  [8bb1440f] + DelimitedFiles
  [8ba89e20] + Distributed
  [f43a241f] + Downloads
  [b77e0a4c] + InteractiveUtils
  [4af54fe1] + LazyArtifacts
  [b27032c2] + LibCURL
  [76f85450] + LibGit2
  [8f399da3] + Libdl
  [37e2e46d] + LinearAlgebra
  [56ddb016] + Logging
  [d6f4376e] + Markdown
  [a63ad114] + Mmap
  [ca575930] + NetworkOptions
  [44cfe95a] + Pkg
  [de0858da] + Printf
  [3fa0cd96] + REPL
  [9a3f8284] + Random
  [ea8e919c] + SHA
  [9e88b42a] + Serialization
  [1a1011a3] + SharedArrays
  [6462fe0b] + Sockets
  [2f01184e] + SparseArrays
  [10745b16] + Statistics
  [fa267f1f] + TOML
  [a4e569a6] + Tar
  [8dfed614] + Test
  [cf7118a7] + UUIDs
  [4ec0a83e] + Unicode
  [e66e0078] + CompilerSupportLibraries_jll
  [deac9b47] + LibCURL_jll
  [29816b5a] + LibSSH2_jll
  [c8ffd9c3] + MbedTLS_jll
  [14a3606d] + MozillaCACerts_jll
  [4536629a] + OpenBLAS_jll
  [05823500] + OpenLibm_jll
  [83775a58] + Zlib_jll
  [8e850b90] + libblastrampoline_jll
  [8e850ede] + nghttp2_jll
  [3f19e933] + p7zip_jll
Precompiling project...
[32m  ‚úì [39m[90mReexport[39m
[32m  ‚úì [39m[90mMissings[39m
[32m  ‚úì [39m[90mColors[39m
[32m  ‚úì [39m[90mFFTW[39m
[32m  ‚úì [39m[90mGraphics[39m
[32m  ‚úì [39m[90mOpenEXR[39m
[32m  ‚úì [39m[90mFFTViews[39m
[32m  ‚úì [39m[90mStatsBase[39m
[32m  ‚úì [39m[90mJLD2[39m
[32m  ‚úì [39m[90mClustering[39m
[32m  ‚úì [39m[90mMetaGraphs[39m
[32m  ‚úì [39m[90mImageCore[39m
[32m  ‚úì [39m[90mImageMorphology[39m
[32m  ‚úì [39m[90mImageBase[39m
[32m  ‚úì [39m[90mPNGFiles[39m
[32m  ‚úì [39m[90mNetpbm[39m
[32m  ‚úì [39m[90mJpegTurbo[39m
[32m  ‚úì [39m[90mSixel[39m
[32m  ‚úì [39m[90mImageMagick[39m
[32m  ‚úì [39m[90mImageDistances[39m
[32m  ‚úì [39m[90mImageAxes[39m
[32m  ‚úì [39m[90mImageTransformations[39m
[32m  ‚úì [39mImageIO
[32m  ‚úì [39m[90mImageShow[39m
[32m  ‚úì [39m[90mImageMetadata[39m
[32m  ‚úì [39m[90mImageContrastAdjustment[39m
[32m  ‚úì [39m[90mImageFiltering[39m
[32m  ‚úì [39m[90mImageQualityIndexes[39m
[32m  ‚úì [39m[90mImageSegmentation[39m
[32m  ‚úì [39mImages
  30 dependencies successfully precompiled in 88 seconds (91 already precompiled)
™text/plainßcell_idŸ$6476d911-e081-4c90-b925-992b285880e3¶kwargsê¢idπMain_PlutoRunner_80680cb1§fileŸB/home/runner/.julia/packages/Pluto/IAQ2s/src/runner/PlutoRunner.jl•group´PlutoRunner•levelÆLogLevel(-555)ßrunning¬¶outputÜ§body†∞persist_js_state¬§mime™text/plain≤last_run_timestampÀAÿê»Q ¸Ù∑has_pluto_hook_features¬¨rootassignee¿ßcell_idŸ$6476d911-e081-4c90-b925-992b285880e3πdepends_on_disabled_cells¬ßruntimeœ   É+ü$µpublished_object_keysêßerrored¬Ÿ$f88a96e4-06de-45b1-b1e5-6d76edd75582â¶queued¬§logsêßrunning¬¶outputÜ§bodyŸ8process_raw_camera_data (generic function with 1 method)∞persist_js_state¬§mime™text/plain≤last_run_timestampÀAÿê»QuK∑has_pluto_hook_features¬¨rootassignee¿ßcell_idŸ$f88a96e4-06de-45b1-b1e5-6d76edd75582πdepends_on_disabled_cells¬ßruntimeŒ æÛµpublished_object_keysêßerrored¬Ÿ$c0cc27aa-2818-4c80-b709-f0a6c776a8a9â¶queued¬§logsêßrunning¬¶outputÜ§bodyŸ-camera_input (generic function with 1 method)∞persist_js_state¬§mime™text/plain≤last_run_timestampÀAÿê»Q|˙µ∑has_pluto_hook_features¬¨rootassignee¿ßcell_idŸ$c0cc27aa-2818-4c80-b709-f0a6c776a8a9πdepends_on_disabled_cells¬ßruntimeŒ W/µpublished_object_keysêßerrored¬Ÿ$a24f3b2b-bc43-4be5-aade-9b0fbda440a3â¶queued¬§logsêßrunning¬¶outputÜ§bodyÇ£msgŸ=MethodError: no method matching getindex(::Missing, ::String)™stacktraceíÖ§callŸ"process_raw_camera_data(::Missing)ßinlined¬§fileŸ1camera.jl#==#f88a96e4-06de-45b1-b1e5-6d76edd75582§line§pathŸg/home/runner/work/disorganised-mess/disorganised-mess/camera.jl#==#f88a96e4-06de-45b1-b1e5-6d76edd75582Ö§callØtop-level scopeßinlined√§fileŸ1camera.jl#==#a24f3b2b-bc43-4be5-aade-9b0fbda440a3§line§pathŸg/home/runner/work/disorganised-mess/disorganised-mess/camera.jl#==#a24f3b2b-bc43-4be5-aade-9b0fbda440a3∞persist_js_state¬§mimeŸ'application/vnd.pluto.stacktrace+object≤last_run_timestampÀAÿê»RP⁄
∑has_pluto_hook_features¬¨rootassignee¿ßcell_idŸ$a24f3b2b-bc43-4be5-aade-9b0fbda440a3πdepends_on_disabled_cells¬ßruntime¿µpublished_object_keysêßerrored√Ÿ$9ce66b4e-4fbf-4dd1-8dfb-3541f7702a6eâ¶queued¬§logsêßrunning¬¶outputÜ§bodyŸ:<div class="markdown"><h2>Needs two functions:</h2>
</div>∞persist_js_state√§mime©text/html≤last_run_timestampÀAÿê»Q^ßi∑has_pluto_hook_features¬¨rootassignee¿ßcell_idŸ$9ce66b4e-4fbf-4dd1-8dfb-3541f7702a6eπdepends_on_disabled_cells¬ßruntimeŒ ©‰+µpublished_object_keysêßerrored¬±cell_dependenciesÜŸ$06a1d5cc-6bda-11eb-202a-7f59977d1b27Ñ¥precedence_heuristic	ßcell_idŸ$06a1d5cc-6bda-11eb-202a-7f59977d1b27¥downstream_cells_mapÅ£wowëŸ$a24f3b2b-bc43-4be5-aade-9b0fbda440a3≤upstream_cells_mapá§Coreê§Baseê∑PlutoRunner.create_bondê´PlutoRunnerê¨camera_inputëŸ$c0cc27aa-2818-4c80-b709-f0a6c776a8a9ØCore.applicableê®Base.getêŸ$6476d911-e081-4c90-b925-992b285880e3Ñ¥precedence_heuristicßcell_idŸ$6476d911-e081-4c90-b925-992b285880e3¥downstream_cells_mapÇ£PkgëŸ$6476d911-e081-4c90-b925-992b285880e3¶Imagesê≤upstream_cells_mapÑßPkg.addê£PkgëŸ$6476d911-e081-4c90-b925-992b285880e3¨Pkg.activateê©mktempdirêŸ$f88a96e4-06de-45b1-b1e5-6d76edd75582Ñ¥precedence_heuristic	ßcell_idŸ$f88a96e4-06de-45b1-b1e5-6d76edd75582¥downstream_cells_mapÅ∑process_raw_camera_dataëŸ$a24f3b2b-bc43-4be5-aade-9b0fbda440a3≤upstream_cells_mapà•UInt8ê°:ê£RGBêßreshapeê°/êßadjointê§conjê£endêŸ$c0cc27aa-2818-4c80-b709-f0a6c776a8a9Ñ¥precedence_heuristic	ßcell_idŸ$c0cc27aa-2818-4c80-b709-f0a6c776a8a9¥downstream_cells_mapÅ¨camera_inputëŸ$06a1d5cc-6bda-11eb-202a-7f59977d1b27≤upstream_cells_mapÇ§HTMLê¢|>êŸ$a24f3b2b-bc43-4be5-aade-9b0fbda440a3Ñ¥precedence_heuristic	ßcell_idŸ$a24f3b2b-bc43-4be5-aade-9b0fbda440a3¥downstream_cells_mapÄ≤upstream_cells_mapÇ∑process_raw_camera_dataëŸ$f88a96e4-06de-45b1-b1e5-6d76edd75582£wowëŸ$06a1d5cc-6bda-11eb-202a-7f59977d1b27Ÿ$9ce66b4e-4fbf-4dd1-8dfb-3541f7702a6eÑ¥precedence_heuristic	ßcell_idŸ$9ce66b4e-4fbf-4dd1-8dfb-3541f7702a6e¥downstream_cells_mapÄ≤upstream_cells_mapÅ®getindexê¥cell_execution_orderñŸ$6476d911-e081-4c90-b925-992b285880e3Ÿ$9ce66b4e-4fbf-4dd1-8dfb-3541f7702a6eŸ$f88a96e4-06de-45b1-b1e5-6d76edd75582Ÿ$c0cc27aa-2818-4c80-b709-f0a6c776a8a9Ÿ$06a1d5cc-6bda-11eb-202a-7f59977d1b27Ÿ$a24f3b2b-bc43-4be5-aade-9b0fbda440a3¥last_hot_reload_timeÀ        ©shortpath©camera.jlÆprocess_status•ready§pathŸ?/home/runner/work/disorganised-mess/disorganised-mess/camera.jlÆlast_save_timeÀAÿê»5∫√™cell_orderñŸ$a24f3b2b-bc43-4be5-aade-9b0fbda440a3Ÿ$06a1d5cc-6bda-11eb-202a-7f59977d1b27Ÿ$6476d911-e081-4c90-b925-992b285880e3Ÿ$9ce66b4e-4fbf-4dd1-8dfb-3541f7702a6eŸ$f88a96e4-06de-45b1-b1e5-6d76edd75582Ÿ$c0cc27aa-2818-4c80-b709-f0a6c776a8a9±published_objectsÄ•nbpkgá≤installed_versionsÄ∞terminal_outputsÄßenabled¬∑restart_recommended_msg¿¥restart_required_msg¿≠busy_packagesê¨instantiated¬´cell_inputsÜŸ$06a1d5cc-6bda-11eb-202a-7f59977d1b27Ñßcell_idŸ$06a1d5cc-6bda-11eb-202a-7f59977d1b27∞running_disabled¬§code∏@bind wow camera_input()´code_folded¬Ÿ$6476d911-e081-4c90-b925-992b285880e3Ñßcell_idŸ$6476d911-e081-4c90-b925-992b285880e3∞running_disabled¬§codeŸ^begin
	import Pkg
	Pkg.activate(mktempdir())
	Pkg.add(["Images", "ImageIO"])
	using Images
end´code_folded¬Ÿ$f88a96e4-06de-45b1-b1e5-6d76edd75582Ñßcell_idŸ$f88a96e4-06de-45b1-b1e5-6d76edd75582∞running_disabled¬§code⁄©
function process_raw_camera_data(raw_camera_data)
	# the raw image data is a long byte array, we need to transform it into something
	# more "Julian" - something with more _structure_.
	
	# The encoding of the raw byte stream is:
	# every 4 bytes is a single pixel
	# every pixel has 4 values: Red, Green, Blue, Alpha
	# (we ignore alpha for this notebook)
	
	# So to get the red values for each pixel, we take every 4th value, starting at 
	# the 1st:
	reds_flat = UInt8.(raw_camera_data["data"][1:4:end])
	greens_flat = UInt8.(raw_camera_data["data"][2:4:end])
	blues_flat = UInt8.(raw_camera_data["data"][3:4:end])
	
	# but these are still 1-dimensional arrays, nicknamed 'flat' arrays
	# We will 'reshape' this into 2D arrays:
	
	width = raw_camera_data["width"]
	height = raw_camera_data["height"]
	
	# shuffle and flip to get it in the right shape
	reds = reshape(reds_flat, (width, height))' / 255.0
	greens = reshape(greens_flat, (width, height))' / 255.0
	blues = reshape(blues_flat, (width, height))' / 255.0
	
	# we have our 2D array for each color
	# Let's create a single 2D array, where each value contains the R, G and B value of 
	# that pixel
	
	RGB.(reds, greens, blues)
end´code_folded¬Ÿ$c0cc27aa-2818-4c80-b709-f0a6c776a8a9Ñßcell_idŸ$c0cc27aa-2818-4c80-b709-f0a6c776a8a9∞running_disabled¬§code⁄cfunction camera_input(;max_size=150, default_url="https://i.imgur.com/SUmi94P.png")
"""
<span class="pl-image waiting-for-permission">
<style>
	
	.pl-image.popped-out {
		position: fixed;
		top: 0;
		right: 0;
		z-index: 5;
	}

	.pl-image #video-container {
		width: 250px;
	}

	.pl-image video {
		border-radius: 1rem 1rem 0 0;
	}
	.pl-image.waiting-for-permission #video-container {
		display: none;
	}
	.pl-image #prompt {
		display: none;
	}
	.pl-image.waiting-for-permission #prompt {
		width: 250px;
		height: 200px;
		display: grid;
		place-items: center;
		font-family: monospace;
		font-weight: bold;
		text-decoration: underline;
		cursor: pointer;
		border: 5px dashed rgba(0,0,0,.5);
	}

	.pl-image video {
		display: block;
	}
	.pl-image .bar {
		width: inherit;
		display: flex;
		z-index: 6;
	}
	.pl-image .bar#top {
		position: absolute;
		flex-direction: column;
	}
	
	.pl-image .bar#bottom {
		background: black;
		border-radius: 0 0 1rem 1rem;
	}
	.pl-image .bar button {
		flex: 0 0 auto;
		background: rgba(255,255,255,.8);
		border: none;
		width: 2rem;
		height: 2rem;
		border-radius: 100%;
		cursor: pointer;
		z-index: 7;
	}
	.pl-image .bar button#shutter {
		width: 3rem;
		height: 3rem;
		margin: -1.5rem auto .2rem auto;
	}

	.pl-image video.takepicture {
		animation: pictureflash 200ms linear;
	}

	@keyframes pictureflash {
		0% {
			filter: grayscale(1.0) contrast(2.0);
		}

		100% {
			filter: grayscale(0.0) contrast(1.0);
		}
	}
</style>

	<div id="video-container">
		<div id="top" class="bar">
			<button id="stop" title="Stop video">‚úñ</button>
			<button id="pop-out" title="Pop out/pop in">‚èè</button>
		</div>
		<video playsinline autoplay></video>
		<div id="bottom" class="bar">
		<button id="shutter" title="Click to take a picture">üì∑</button>
		</div>
	</div>
		
	<div id="prompt">
		<span>
		Enable webcam
		</span>
	</div>

<script>
	// based on https://github.com/fonsp/printi-static (by the same author)

	const span = currentScript.parentElement
	const video = span.querySelector("video")
	const popout = span.querySelector("button#pop-out")
	const stop = span.querySelector("button#stop")
	const shutter = span.querySelector("button#shutter")
	const prompt = span.querySelector(".pl-image #prompt")

	const maxsize = $(max_size)

	const send_source = (source, src_width, src_height) => {
		const scale = Math.min(1.0, maxsize / src_width, maxsize / src_height)

		const width = Math.floor(src_width * scale)
		const height = Math.floor(src_height * scale)

		const canvas = html`<canvas width=\${width} height=\${height}>`
		const ctx = canvas.getContext("2d")
		ctx.drawImage(source, 0, 0, width, height)

		span.value = {
			width: width,
			height: height,
			data: ctx.getImageData(0, 0, width, height).data,
		}
		span.dispatchEvent(new CustomEvent("input"))
	}
	
	const clear_camera = () => {
		window.stream.getTracks().forEach(s => s.stop());
		video.srcObject = null;

		span.classList.add("waiting-for-permission");
	}

	prompt.onclick = () => {
		navigator.mediaDevices.getUserMedia({
			audio: false,
			video: {
				facingMode: "environment",
			},
		}).then(function(stream) {

			stream.onend = console.log

			window.stream = stream
			video.srcObject = stream
			window.cameraConnected = true
			video.controls = false
			video.play()
			video.controls = false

			span.classList.remove("waiting-for-permission");

		}).catch(function(error) {
			console.log(error)
		});
	}
	stop.onclick = () => {
		clear_camera()
	}
	popout.onclick = () => {
		span.classList.toggle("popped-out")
	}

	shutter.onclick = () => {
		const cl = video.classList
		cl.remove("takepicture")
		void video.offsetHeight
		cl.add("takepicture")
		video.play()
		video.controls = false
		console.log(video)
		send_source(video, video.videoWidth, video.videoHeight)
	}
	
	
	document.addEventListener("visibilitychange", () => {
		if (document.visibilityState != "visible") {
			clear_camera()
		}
	})


	// Set a default image

	const img = html`<img crossOrigin="anonymous">`

	img.onload = () => {
	console.log("helloo")
		send_source(img, img.width, img.height)
	}
	img.src = "$(default_url)"
	console.log(img)
</script>
</span>
""" |> HTML
end´code_folded√Ÿ$a24f3b2b-bc43-4be5-aade-9b0fbda440a3Ñßcell_idŸ$a24f3b2b-bc43-4be5-aade-9b0fbda440a3∞running_disabled¬§codeºprocess_raw_camera_data(wow)´code_folded¬Ÿ$9ce66b4e-4fbf-4dd1-8dfb-3541f7702a6eÑßcell_idŸ$9ce66b4e-4fbf-4dd1-8dfb-3541f7702a6e∞running_disabled¬§codeŸ!md"""
## Needs two functions:
"""´code_folded√´notebook_idŸ$086173b0-af72-11ec-0732-b9ba20e0cb67´in_temp_dir¬